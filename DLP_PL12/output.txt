
#source	"big.input.txt"

	' * RecordType[fields: [Field{name:integer, type:IntType, offset:0}, Field{name:character, type:CharType, offset:2}]] pair (offset 0)
	#global	pair:{
		integer:int
		character:char
	}
	' * ArrayType[of: RecordType[fields: [Field{name:employees, type:ArrayType[of: RecordType[fields: [Field{name:age, type:IntType, offset:0}]], size: 2], offset:0}]], size: 2] acme (offset 3)
	#global	acme:2 * {
		employees:2 * {
		age:int
	}
	}
	' * ArrayType[of: ArrayType[of: IntType, size: 3], size: 8] fibonacci (offset 11)
	#global	fibonacci:8 * 3 * int

' Invocation to the main function
call main
halt


#line 14

 p:
	#func	p
	' * --- Parameters ---

	#ret	void

	' * --- Local variables ---

	enter 0
	ret	0, 0, 0

#line 16

 f:
	#func	f
	' * --- Parameters ---
	' * RealType r (offset 6)
	#param	r:real
	' * IntType e (offset 4)
	#param	e:int

	#ret	int

	' * --- Local variables ---
	' * RealType real (offset -4)
	#local	real:real
	' * CharType c (offset -5)
	#local	c:char
	' * IntType result (offset -7)
	#local	result:int

	enter 7

#line 20
	' * Assignment
	push bp
	pushi -4
	addi
	push bp
	pushi 6
	addi
	loadf
	pushf 10.0
	mulf
	storef

#line 21
	' * Assignment
	push bp
	pushi -5
	addi
	pushb 48
	storeb

#line 22
	' * If
	push bp
	pushi 4
	addi
	loadi
	pushi 256
	lti
	jz else1
	' * If body

#line 23
	' * Assignment
	push bp
	pushi -5
	addi
	push bp
	pushi 4
	addi
	loadi
	i2b
	storeb

#line 24
	' * Assignment
	push bp
	pushi -7
	addi
	push bp
	pushi -5
	addi
	loadb
	b2i
	storei
	jmp end_if1

 else1:
	' * Else body

#line 27
	' * Assignment
	push bp
	pushi -7
	addi
	push bp
	pushi -4
	addi
	loadf
	f2i
	storei

 end_if1:

#line 28
	' * Return
	push bp
	pushi -7
	addi
	loadi
	ret	2, 7, 6

#line 31

 initialize:
	#func	initialize
	' * --- Parameters ---

	#ret	void

	' * --- Local variables ---
	' * IntType i (offset -2)
	#local	i:int

	enter 2

#line 33
	' * Assignment
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	pushi 0
	storei

#line 34
	' * Assignment
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 1
	storei

#line 35
	' * Assignment
	pusha 11
	pushi 0
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	pushi 1
	storei

#line 36
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 1
	storei

#line 37
	' * While

 while2:
	push bp
	pushi -2
	addi
	loadi
	pushi 8
	lti
	jz end_while2
	' * While body

#line 38
	' * Assignment
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	subi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	storei

#line 39
	' * Assignment
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	subi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	loadi
	storei

#line 40
	' * Assignment
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	loadi
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	addi
	storei

#line 41
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while2

 end_while2:
	ret	0, 2, 0

#line 47

 main:
	#func	main
	' * --- Parameters ---

	#ret	void

	' * --- Local variables ---
	' * IntType i (offset -2)
	#local	i:int
	' * IntType j (offset -4)
	#local	j:int

	enter 4

#line 49
	' * Invocation of function: p
	call p

#line 50
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 51
	' * Assignment
	pusha 0
	pushi 2
	addi
	pushb 48
	storeb

#line 52
	' * Assignment
	pusha 0
	pushi 0
	addi
	pushb 48
	b2i
	storei

#line 55
	' * Write
	push bp
	pushi -2
	addi
	loadi
	i2f
	pusha 0
	pushi 2
	addi
	loadb
	b2i
	call f
	outi

#line 55
	' * Write
	pushb 10
	outb

#line 56
	' * Invocation of function: f
	pushf 1.3
	pushi 2
	call f
	popi

#line 58
	' * Invocation of function: initialize
	call initialize

#line 59
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 60
	' * While

 while3:
	push bp
	pushi -2
	addi
	loadi
	pushi 8
	lti
	jz end_while3
	' * While body

#line 62
	' * Write
	pushb 40
	outb

#line 62
	' * Write
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	outi

#line 62
	' * Write
	pushb 41
	outb

#line 62
	' * Write
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 0
	pushi 2
	muli
	addi
	loadi
	outi

#line 63
	' * Write
	pushb 43
	outb

#line 63
	' * Write
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 1
	pushi 2
	muli
	addi
	loadi
	outi

#line 63
	' * Write
	pushb 61
	outb

#line 64
	' * Write
	pusha 11
	push bp
	pushi -2
	addi
	loadi
	pushi 6
	muli
	addi
	pushi 2
	pushi 2
	muli
	addi
	loadi
	outi

#line 64
	' * Write
	pushb 10
	outb

#line 65
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while3

 end_while3:

#line 68
	' * Assignment
	pusha 3
	pushi 1
	pushi 4
	muli
	addi
	pushi 0
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 0
	addi
	pushi 56
	storei

#line 70
	' * Write
	pusha 3
	pushi 1
	pushi 4
	muli
	addi
	pushi 0
	addi
	pushi 1
	pushi 2
	muli
	addi
	pushi 0
	addi
	loadi
	outi

#line 70
	' * Write
	pushb 10
	outb

#line 71
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 72
	' * While

 while4:
	push bp
	pushi -2
	addi
	loadi
	pushi 2
	lti
	jz end_while4
	' * While body

#line 73
	' * Assignment
	push bp
	pushi -4
	addi
	pushi 0
	storei

#line 74
	' * While

 while5:
	push bp
	pushi -4
	addi
	loadi
	pushi 2
	lti
	jz end_while5
	' * While body

#line 75
	' * Assignment
	pusha 3
	push bp
	pushi -2
	addi
	loadi
	pushi 4
	muli
	addi
	pushi 0
	addi
	push bp
	pushi -4
	addi
	loadi
	pushi 2
	muli
	addi
	pushi 0
	addi
	push bp
	pushi -2
	addi
	loadi
	push bp
	pushi -4
	addi
	loadi
	addi
	storei

#line 76
	' * Assignment
	push bp
	pushi -4
	addi
	push bp
	pushi -4
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while5

 end_while5:

#line 78
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while4

 end_while4:

#line 81
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 82
	' * While

 while6:
	push bp
	pushi -2
	addi
	loadi
	pushi 2
	lti
	jz end_while6
	' * While body

#line 83
	' * Assignment
	push bp
	pushi -4
	addi
	pushi 0
	storei

#line 84
	' * While

 while7:
	push bp
	pushi -4
	addi
	loadi
	pushi 2
	lti
	jz end_while7
	' * While body

#line 86
	' * Write
	pusha 3
	push bp
	pushi -2
	addi
	loadi
	pushi 4
	muli
	addi
	pushi 0
	addi
	push bp
	pushi -4
	addi
	loadi
	pushi 2
	muli
	addi
	pushi 0
	addi
	loadi
	outi

#line 86
	' * Write
	pushb 32
	outb

#line 87
	' * Assignment
	push bp
	pushi -4
	addi
	push bp
	pushi -4
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while7

 end_while7:

#line 89
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while6

 end_while6:
	ret	0, 4, 0
