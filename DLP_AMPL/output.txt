
#source	"input.txt"

	' * IntType i (offset 0)
	#global	i:int
	' * IntType n (offset 2)
	#global	n:int
	' * IntType j (offset 4)
	#global	j:int
	' * CharType c (offset 6)
	#global	c:char
	' * RecordType[fields: [Field{name:integer, type:IntType, offset:0}, Field{name:character, type:CharType, offset:2}]] pair (offset 7)
	#global	pair:{
		integer:int
		character:char
	}
	' * ArrayType[of: ArrayType[of: IntType, size: 10], size: 10] matrix (offset 10)
	#global	matrix:10 * 10 * int

' Invocation to the main function
call main
halt


#line 12

 p:
	#func	p
	' * --- Parameters ---

	#ret	void

	' * --- Local variables ---

	enter 0
	ret	0, 0, 0

#line 14

 f:
	#func	f
	' * --- Parameters ---
	' * RealType r (offset 6)
	#param	r:real
	' * IntType e (offset 4)
	#param	e:int

	#ret	int

	' * --- Local variables ---
	' * RealType real (offset -4)
	#local	real:real
	' * CharType c (offset -5)
	#local	c:char

	enter 5

#line 17
	' * Assignment
	push bp
	pushi -4
	addi
	pusha 7
	pushi 2
	addi
	loadb
	b2i
	i2f
	pusha 7
	pushi 0
	addi
	loadi
	i2f
	addf
	push bp
	pushi 6
	addi
	loadf
	addf
	push bp
	pushi 4
	addi
	loadi
	i2f
	addf
	storef

#line 18
	' * Assignment
	push bp
	pushi -5
	addi
	pushb 48
	storeb

#line 19
	' * Return
	push bp
	pushi -5
	addi
	loadb
	b2i
	ret	2, 5, 6

#line 24

 fill:
	#func	fill
	' * --- Parameters ---
	' * IntType row (offset 8)
	#param	row:int
	' * IntType value (offset 6)
	#param	value:int
	' * IntType increment (offset 4)
	#param	increment:int

	#ret	void

	' * --- Local variables ---
	' * IntType i (offset -2)
	#local	i:int
	' * IntType inc (offset -4)
	#local	inc:int

	enter 4

#line 26
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 27
	' * Assignment
	push bp
	pushi -4
	addi
	push bp
	pushi 4
	addi
	loadi
	storei

#line 28
	' * While

 while1:
	push bp
	pushi -2
	addi
	loadi
	pushi 10
	lti
	jz end_while1
	' * While body

#line 29
	' * Assignment
	pusha 10
	push bp
	pushi 8
	addi
	loadi
	pushi 20
	muli
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 2
	muli
	addi
	push bp
	pushi 6
	addi
	loadi
	push bp
	pushi -4
	addi
	loadi
	addi
	storei

#line 30
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei

#line 31
	' * Assignment
	push bp
	pushi -4
	addi
	push bp
	pushi -4
	addi
	loadi
	push bp
	pushi 4
	addi
	loadi
	addi
	storei
	jmp while1

 end_while1:
	ret	0, 4, 6

#line 35

 show:
	#func	show
	' * --- Parameters ---
	' * IntType row (offset 4)
	#param	row:int

	#ret	void

	' * --- Local variables ---
	' * IntType i (offset -2)
	#local	i:int

	enter 2

#line 37
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 38
	' * While

 while2:
	push bp
	pushi -2
	addi
	loadi
	pushi 10
	lti
	jz end_while2
	' * While body

#line 39
	' * Write
	pushb 40
	outb

#line 39
	' * Write
	push bp
	pushi 4
	addi
	loadi
	outi

#line 39
	' * Write
	pushb 44
	outb

#line 39
	' * Write
	push bp
	pushi -2
	addi
	loadi
	outi

#line 39
	' * Write
	pushb 41
	outb

#line 39
	' * Write
	pushb 58
	outb

#line 39
	' * Write
	pusha 10
	push bp
	pushi 4
	addi
	loadi
	pushi 20
	muli
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 2
	muli
	addi
	loadi
	outi

#line 39
	' * Write
	pushb 32
	outb

#line 40
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while2

 end_while2:

#line 42
	' * Write
	pushb 10
	outb
	ret	0, 2, 2

#line 46

 main:
	#func	main
	' * --- Parameters ---

	#ret	void

	' * --- Local variables ---
	' * IntType i (offset -2)
	#local	i:int

	enter 2

#line 49
	' * Invocation of function: p
	call p

#line 50
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 51
	' * Assignment
	pusha 7
	pushi 2
	addi
	pushb 48
	storeb

#line 52
	' * Assignment
	pusha 7
	pushi 0
	addi
	pushb 48
	b2i
	storei

#line 53
	' * Write
	push bp
	pushi -2
	addi
	loadi
	i2f
	pusha 7
	pushi 2
	addi
	loadb
	b2i
	call f
	outi

#line 53
	' * Write
	pushb 10
	outb

#line 55
	' * Invocation of function: f
	pushf 1.3
	pushi 2
	call f
	popi

#line 57
	' * Assignment
	push bp
	pushi -2
	addi
	pushi 0
	storei

#line 58
	' * Assignment
	pusha 4
	pushi 0
	storei

#line 59
	' * While

 while3:
	push bp
	pushi -2
	addi
	loadi
	pushi 10
	lti
	jz end_while3
	' * While body

#line 60
	' * Invocation of function: fill
	push bp
	pushi -2
	addi
	loadi
	pusha 4
	loadi
	pushi 1
	call fill

#line 61
	' * Invocation of function: show
	push bp
	pushi -2
	addi
	loadi
	call show

#line 62
	' * Assignment
	push bp
	pushi -2
	addi
	push bp
	pushi -2
	addi
	loadi
	pushi 1
	addi
	storei

#line 63
	' * Assignment
	pusha 4
	push bp
	pushi -2
	addi
	loadi
	pushi 10
	muli
	storei
	jmp while3

 end_while3:
	ret	0, 2, 0
