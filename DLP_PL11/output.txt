
#source	"input.txt"

	' * ArrayType[of: RealType, size: 10] v (offset 0)

' Invocation to the main function
call main
halt


#line 4

 main:
	' * Parameters
	' * Local variables
	' * RealType value (offset -4)
	' * IntType i (offset -6)
	' * IntType j (offset -8)
	' * ArrayType[of: ArrayType[of: IntType, size: 5], size: 4] w (offset -48)
	' * RecordType[fields: [Field{name:day, type:IntType, offset:-54}, Field{name:month, type:IntType, offset:-52}, Field{name:year, type:IntType, offset:-50}]] date (offset -54)
	enter 54

#line 12
	' * Read
	push bp
	pushi -54
	addi
	pushi -54
	addi
	ini
	storei

#line 13
	' * Assignment
	push bp
	pushi -54
	addi
	pushi -50
	addi
	pushb 97
	b2i
	storei

#line 14
	' * Assignment
	push bp
	pushi -54
	addi
	pushi -52
	addi
	push bp
	pushi -54
	addi
	pushi -54
	addi
	loadi
	push bp
	pushi -54
	addi
	pushi -50
	addi
	loadi
	muli
	pushi 12
	modi
	pushi 1
	addi
	storei

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi -54
	addi
	loadi
	outi

#line 15
	' * Write
	pushb 10
	outb

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi -52
	addi
	loadi
	outi

#line 15
	' * Write
	pushb 10
	outb

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi -50
	addi
	loadi
	i2f
	outf

#line 15
	' * Write
	pushb 10
	outb

#line 17
	' * Read
	push bp
	pushi -4
	addi
	inf
	storef

#line 19
	' * Assignment
	push bp
	pushi -6
	addi
	pushi 0
	storei

#line 20
	' * While

 while1:
	push bp
	pushi -6
	addi
	loadi
	pushi 10
	lti
	jz end_while1
	' * While body

#line 21
	' * Assignment
	pusha 0
	push bp
	pushi -6
	addi
	loadi
	pushi 4
	muli
	addi
	push bp
	pushi -4
	addi
	loadf
	storef

#line 22
	' * Write
	push bp
	pushi -6
	addi
	loadi
	outi

#line 22
	' * Write
	pushb 58
	outb

#line 22
	' * Write
	pusha 0
	push bp
	pushi -6
	addi
	loadi
	pushi 4
	muli
	addi
	loadf
	outf

#line 22
	' * Write
	pushb 32
	outb

#line 23
	' * If
	push bp
	pushi -6
	addi
	loadi
	pushi 2
	modi
	jz else2
	' * If body

#line 24
	' * Write
	pushb 111
	outb

#line 24
	' * Write
	pushb 100
	outb

#line 24
	' * Write
	pushb 100
	outb

#line 24
	' * Write
	pushb 10
	outb
	jmp end_if2

 else2:

#line 26
	' * Write
	pushb 101
	outb

#line 26
	' * Write
	pushb 118
	outb

#line 26
	' * Write
	pushb 101
	outb

#line 26
	' * Write
	pushb 110
	outb

#line 26
	' * Write
	pushb 10
	outb

 end_if2:

#line 27
	' * Assignment
	push bp
	pushi -6
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while1

 end_while1:

#line 29
	' * Write
	pushb 10
	outb

#line 31
	' * Assignment
	push bp
	pushi -6
	addi
	pushi 0
	storei

#line 32
	' * While

 while3:
	push bp
	pushi -6
	addi
	loadi
	pushi 4
	lti
	jz end_while3
	' * While body

#line 33
	' * Assignment
	push bp
	pushi -8
	addi
	pushi 0
	storei

#line 34
	' * While

 while4:
	push bp
	pushi -8
	addi
	loadi
	pushi 5
	lti
	jz end_while4
	' * While body

#line 35
	' * Assignment
	push bp
	pushi -48
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 10
	muli
	addi
	push bp
	pushi -8
	addi
	loadi
	pushi 2
	muli
	addi
	push bp
	pushi -6
	addi
	loadi
	push bp
	pushi -8
	addi
	loadi
	addi
	storei

#line 36
	' * Write
	push bp
	pushi -48
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 10
	muli
	addi
	push bp
	pushi -8
	addi
	loadi
	pushi 2
	muli
	addi
	loadi
	outi

#line 36
	' * Write
	pushb 32
	outb

#line 37
	' * Assignment
	push bp
	pushi -8
	addi
	push bp
	pushi -8
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while4

 end_while4:

#line 39
	' * Write
	pushb 10
	outb

#line 40
	' * Assignment
	push bp
	pushi -6
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while3

 end_while3:
	ret	0, 54, 0
